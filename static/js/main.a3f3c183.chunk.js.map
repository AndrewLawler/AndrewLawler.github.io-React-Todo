{"version":3,"sources":["components/Todoitem.js","components/Todos.js","components/layout/Header.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["Todoitem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","padding","background","border","textDecoration","props","todo","completed","getButton","color","width","height","float","textAlign","paddingTop","fontSize","inherits","createClass","key","value","_this$props$todo","id","title","react_default","a","createElement","style","onClick","delTodo","bind","type","onChange","markComplete","Component","Todos","todos","map","components_Todoitem","linkStyle","headerStyle","Header","react_router_dom","to","AddTodo","state","e","setState","defineProperty","target","name","onSubmit","preventDefault","addTodo","display","paddingBottom","flex","placeholder","className","aboutStyle","paraStyle","About","Fragment","App","uuid","v4","toConsumableArray","filter","newTodo","_this2","layout_Header","react_router","exact","path","render","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yPAgDeA,EA7Cf,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEEQ,SAAW,WACT,MAAO,CACLC,QAAS,MACTC,WAAY,UACZC,OAAQ,oBACRC,eAAgBnB,EAAKoB,MAAMC,KAAKC,UAAY,eAAiB,SAPnEtB,EAWEuB,UAAY,WACV,MAAO,CACLN,WAAY,OACZO,MAAO,UACPN,OAAQ,oBACRO,MAAO,OACPC,OAAQ,OACRC,MAAO,QACPC,UAAW,SACXC,WAAY,MACZC,SAAU,SArBhB9B,EAAA,OAAAC,OAAA8B,EAAA,EAAA9B,CAAAJ,EAAAC,GAAAG,OAAA+B,EAAA,EAAA/B,CAAAJ,EAAA,EAAAoC,IAAA,SAAAC,MAAA,WA0BW,IAAAC,EACehC,KAAKiB,MAAMC,KAAzBe,EADDD,EACCC,GAAIC,EADLF,EACKE,MACZ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAOtC,KAAKY,YACfuB,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,OAAKC,MAAOtC,KAAKoB,YAAamB,QAASvC,KAAKiB,MAAMuB,QAAQC,KAAKzC,KAAMiC,IAArE,UACAE,EAAAC,EAAAC,cAAA,SAAOC,MAAO,CAACd,MAAO,QAASkB,KAAK,WAAWC,SAAU3C,KAAKiB,MAAM2B,aAAaH,KAAKzC,KAAMiC,KAF9F,IAEuG,KACnGC,QAjCZxC,EAAA,CAA8BmD,aCefC,mLAbJ,IAAAjD,EAAAG,KACP,OAAOA,KAAKiB,MAAM8B,MAAMC,IAAI,SAAC9B,GAAD,OACxBiB,EAAAC,EAAAC,cAAEY,EAAF,CAAWnB,IAAKZ,EAAKe,GAAIf,KAAOA,EAAO0B,aAAc/C,EAAKoB,MAAM2B,aAAcJ,QAAS3C,EAAKoB,MAAMuB,mBAHtFK,mBCQpB,IAAMK,EAAY,CAChB7B,MAAO,QAGH8B,EAAc,CAClBrC,WAAY,UACZO,MAAO,OACPI,UAAW,SACXZ,QAAS,QAGIuC,EApBf,WACE,OACEjB,EAAAC,EAAAC,cAAA,UAAQC,MAAOa,GACXhB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sBACJF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMf,MAAOY,EAAWI,GAAG,KAA3B,QAFJ,MAEiDnB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMf,MAAOY,EAAWI,GAAG,UAA3B,mBC+BtCC,EApCf,SAAA5D,GAAA,SAAA4D,IAAA,IAAA3D,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuD,GAAA,QAAAtD,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAyD,IAAA9C,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEEoD,MAAQ,CACNtB,MAAO,IAHXrC,EAME8C,SAAW,SAACc,GAAD,OAAO5D,EAAK6D,SAAL5D,OAAA6D,EAAA,EAAA7D,CAAA,GAAiB2D,EAAEG,OAAOC,KAAOJ,EAAEG,OAAO7B,SAN9DlC,EAQEiE,SAAW,SAACL,GACVA,EAAEM,iBACFlE,EAAKoB,MAAM+C,QAAQnE,EAAK2D,MAAMtB,OAC9BrC,EAAK6D,SAAS,CAAExB,MAAO,MAX3BrC,EAAA,OAAAC,OAAA8B,EAAA,EAAA9B,CAAAyD,EAAA5D,GAAAG,OAAA+B,EAAA,EAAA/B,CAAAyD,EAAA,EAAAzB,IAAA,SAAAC,MAAA,WAeI,OACEI,EAAAC,EAAAC,cAAA,QAAMyB,SAAU9D,KAAK8D,SAAUxB,MAAO,CAAE2B,QAAS,OAAQC,cAAe,QACtE/B,EAAAC,EAAAC,cAAA,SACIK,KAAK,OACLmB,KAAK,QACLvB,MAAO,CAAE6B,KAAM,KAAMtD,QAAS,MAAOE,OAAQ,qBAC7CqD,YAAY,eACZrC,MAAO/B,KAAKwD,MAAMtB,MAClBS,SAAU3C,KAAK2C,WAEnBR,EAAAC,EAAAC,cAAA,SACIK,KAAK,SACLX,MAAM,SACNsC,UAAU,MACV/B,MAAO,CAAC6B,KAAM,IAAKrD,WAAY,QAASO,MAAO,UAAWN,OAAQ,4BA7B9EwC,EAAA,CAA6BV,8BCgB7B,IAAMyB,EAAa,CACfjD,MAAO,UACPK,WAAY,QAGV6C,EAAY,CACdlD,MAAO,WAIImD,EA1Bf,WACE,OACErC,EAAAC,EAAAC,cAACF,EAAAC,EAAMqC,SAAP,KACItC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACvB,OAAQ,sBACjBoB,EAAAC,EAAAC,cAAA,MAAIC,MAAOgC,GAAX,WACAnC,EAAAC,EAAAC,cAAA,KAAGC,MAAOiC,GAAV,IAAsBpC,EAAAC,EAAAC,cAAA,WAAtB,iCAA0DF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAAhE,4DACAF,EAAAC,EAAAC,cAAA,WADA,4EAC+EF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WADrF,6BAE0BF,EAAAC,EAAAC,cAAA,WAF1B,oBAKAF,EAAAC,EAAAC,cAAA,cCgEGqC,6MAjEblB,MAAQ,CACNT,MAAO,CACL,CACEd,GAAI0C,IAAKC,KACT1C,MAAO,kBACPf,WAAW,GAEb,CACEc,GAAI0C,IAAKC,KACT1C,MAAO,sBACPf,WAAW,OAOjByB,aAAe,SAACX,GACdpC,EAAK6D,SAAS,CAAEX,MAAOlD,EAAK2D,MAAMT,MAAMC,IAAI,SAAA9B,GAI1C,OAHGA,EAAKe,KAAOA,IACbf,EAAKC,WAAaD,EAAKC,WAElBD,SAKXsB,QAAU,SAACP,GACTpC,EAAK6D,SAAS,CAAEX,MAAMjD,OAAA+E,EAAA,EAAA/E,CAAKD,EAAK2D,MAAMT,MAAM+B,OAAO,SAAA5D,GAAI,OAAIA,EAAKe,KAC5DA,UAIN+B,QAAU,SAAC9B,GACT,IAAM6C,EAAU,CACd9C,GAAI0C,IAAKC,KACT1C,QACAf,WAAW,GAEbtB,EAAK6D,SAAS,CAACX,MAAK,GAAApC,OAAAb,OAAA+E,EAAA,EAAA/E,CAAMD,EAAK2D,MAAMT,OAAjB,CAAwBgC,+EAIrC,IAAAC,EAAAhF,KACP,OACEmC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,OACblC,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,aACblC,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,QACblC,EAAAC,EAAAC,cAAC4C,EAAD,MACA9C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAApE,GAAK,OACjCkB,EAAAC,EAAAC,cAACF,EAAAC,EAAMqC,SAAP,KACEtC,EAAAC,EAAAC,cAACiD,EAAD,CAAStB,QAASgB,EAAKhB,UACvB7B,EAAAC,EAAAC,cAACkD,EAAD,CAAOjD,MAAO,CAACZ,WAAY,OAAQqB,MAAOiC,EAAKxB,MAAMT,MAAOH,aAAcoC,EAAKpC,aAAcJ,QAASwC,EAAKxC,cAG/GL,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAOE,KAAK,SAASI,UAAWhB,eA1D5B3B,aCGE4C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAAST,OAAOlD,EAAAC,EAAAC,cAAC0D,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a3f3c183.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Todoitem extends Component {\r\n\r\n  getStyle = () => {\r\n    return {\r\n      padding: '5px',\r\n      background: '#f4f4f4',\r\n      border: '1px solid #4040bf',\r\n      textDecoration: this.props.todo.completed ? 'line-through' : 'none',\r\n    }\r\n  } \r\n\r\n  getButton = () => {\r\n    return {\r\n      background: '#fff',\r\n      color: '#4040bf',\r\n      border: '1px solid #4040bf',\r\n      width: '96px',\r\n      height: '22px',\r\n      float: 'right',\r\n      textAlign: 'center',\r\n      paddingTop: '1px',\r\n      fontSize: '13px',\r\n    \r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id, title } = this.props.todo;\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        <p>\r\n          <btn style={this.getButton()} onClick={this.props.delTodo.bind(this, id)}>Delete</btn>\r\n          <input style={{float: 'left'}} type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)} /> {'  '}\r\n          { title }\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// PropTypes\r\nTodoitem.propTypes = {\r\n    todos: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Todoitem\r\n","import React, { Component } from 'react';\r\nimport Todoitem from './Todoitem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Todos extends Component {\r\n  render() {\r\n    return this.props.todos.map((todo) => (\r\n        < Todoitem key={todo.id} todo={ todo } markComplete={this.props.markComplete} delTodo={this.props.delTodo} />\r\n    ));\r\n  }\r\n}\r\n\r\n// PropTypes\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired\r\n}\r\n\r\n\r\nexport default Todos;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header style={headerStyle}>\r\n        <h1><b>TodoList</b></h1>\r\n        <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"/about\">About</Link>\r\n    </header>\r\n  )\r\n}\r\n\r\nconst linkStyle = {\r\n  color: '#fff'\r\n}\r\n\r\nconst headerStyle = {\r\n  background: '#4040bf',\r\n  color: '#fff',\r\n  textAlign: 'center',\r\n  padding: '10px'\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport class AddTodo extends Component {\r\n\r\n  state = {\r\n    title: ''\r\n  }\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addTodo(this.state.title);\r\n    this.setState({ title: '' });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit} style={{ display: 'flex', paddingBottom: '5px' }}>\r\n        <input \r\n            type=\"text\" \r\n            name=\"title\" \r\n            style={{ flex: '10', padding: '5px', border: '1px solid #4040bf'}}\r\n            placeholder=\"Add Todo ...\"\r\n            value={this.state.title}\r\n            onChange={this.onChange}\r\n        />\r\n        <input\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n            className=\"btn\"\r\n            style={{flex: '1', background: 'white', color: '#4040bf', border: '1px solid #4040bf'}}\r\n        />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddTodo\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n  return (\r\n    <React.Fragment>\r\n        <div style={{border: '1px solid #4040bf'}}>\r\n            <h1 style={aboutStyle}> About </h1>\r\n            <p style={paraStyle}> <br /> This is the Todo app v1.0.1. <br /><br />It is a project i built using the help of a crash course. \r\n            <br />On-top of what the crash course told me, lots of changes have been made. <br /><br />\r\n            Created By: Andrew Lawler <br />\r\n            Date: 31/03/2019\r\n            </p>\r\n            <br />\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst aboutStyle = {\r\n    color: '#4040bf',\r\n    paddingTop: '20px',\r\n}\r\n\r\nconst paraStyle = {\r\n    color: '#4040bf'\r\n}\r\n\r\n\r\nexport default About;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Todos from './components/Todos';\nimport './App.css';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport uuid from 'uuid';\nimport About from './components/pages/About';\n\nclass App extends Component {\n  // State for todos\n  state = {\n    todos: [\n      {\n        id: uuid.v4(),\n        title: 'Welcome to Todo',\n        completed: false\n      },\n      {\n        id: uuid.v4(),\n        title: 'Add some more Todos',\n        completed: false \n      }\n    ]\n  }\n\n  // Mark the todo as complete \n\n  markComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(todo => {\n      if(todo.id === id){\n        todo.completed = !todo.completed\n      }\n      return todo;\n    }) });\n  }\n\n  // Delete Todo\n  delTodo = (id) => {\n    this.setState({ todos: [...this.state.todos.filter(todo => todo.id\n    !== id)] });\n  }\n\n  // Add Todo\n  addTodo = (title) => {\n    const newTodo = {\n      id: uuid.v4(),\n      title,\n      completed: false\n    }\n    this.setState({todos: [...this.state.todos, newTodo]})\n  }\n\n  // full render\n  render() {\n    return (\n      <Router> \n        <div className=\"App\">\n          <div className=\"container\">\n            <div className=\"type\">\n              <Header />\n              <Route exact path=\"/\" render={props => (\n                <React.Fragment>\n                  <AddTodo addTodo={this.addTodo}/>\n                  <Todos style={{paddingTop: '5px'}} todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo}/>\n                </React.Fragment>\n              )} />\n              <Route path=\"/about\" component={About} />\n            </div>  \n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}